{"version":3,"sources":["firebase.js","user.js","UserProfile.js","ImageUpload.js","Post.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","User","user","useState","userinfo","setUserInfo","openFollowers","setOpenFollowers","openFollowing","setOpenFollowing","classes","React","modalStyle","useEffect","displayName","collection","doc","onSnapshot","data","className","Avatar","src","photoURL","alt","username","posts","length","onClick","followers","following","description","Modal","open","onClose","style","map","follower","UserProfile","crntuser","profileInfo","setProfileInfo","sameUser","setSameUser","isFollowing","setIsFollowing","isFollowingMsg","setIsFollowingMsg","postsInfo","setPostsinfo","profile","useParams","indexOf","postIDS","i","get","then","postinfo","currPostsInfo","to","Button","variant","color","update","FieldValue","arrayRemove","arrayUnion","imageURL","likes","comments","ImageUpload","caption","setCaption","image","setImage","progress","setProgress","Input","type","name","onChange","event","target","value","placeholder","max","e","files","ref","put","on","snapshot","pgrs","Math","round","bytesTransferred","totalBytes","console","log","error","child","getDownloadURL","url","add","timestamp","serverTimestamp","userAvatar","id","alert","Post","postID","postInfo","setPostInfo","commentText","setCommentText","liked","setLiked","likeCount","setLikeCount","likeState","setLikeState","includes","toggleLike","preventDefault","onDoubleClick","class","viewBox","d","IconButton","date","format","toDate","comment","commenttext","App","setUser","openSignIn","setOpenSignIn","openSignUp","setOpenSignUp","openPost","setOpenPost","setUsername","password","setPassword","email","setEmail","searchText","setSearchText","userImage","setUserImage","avatarURL","setAvatarURL","setPostIDS","unsubscribe","onAuthStateChanged","authUser","uinfo","tpost","currPostIDS","Set","s","query","forEach","item","match","signOut","createUserWithEmailAndPassword","updateProfile","message","set","catch","signInWithEmailAndPassword","path","exact","key","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.964ec5cd.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBkmbzhBvfPXjp_dNAX8PlORCtrQsFSac0\",\r\n  authDomain: \"phoenixer-insta.firebaseapp.com\",\r\n  databaseURL: \"https://phoenixer-insta.firebaseio.com\",\r\n  projectId: \"phoenixer-insta\",\r\n  storageBucket: \"phoenixer-insta.appspot.com\",\r\n  messagingSenderId: \"940379156176\",\r\n  appId: \"1:940379156176:web:b4108c43ba3d5f3c7ef8d5\",\r\n  measurementId: \"G-63YJE45Q07\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst storage = firebase.storage()\r\n\r\nexport { db, auth, storage }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { db } from './firebase'\r\nimport Avatar from '@material-ui/core/avatar'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './user.css'\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #aa4488',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\nfunction User({ user }) {\r\n\r\n  const [userinfo,setUserInfo] = useState(null)\r\n  const [openFollowers,setOpenFollowers] = useState(false)\r\n  const [openFollowing,setOpenFollowing] = useState(false)\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  useEffect(() => {\r\n    if(user && user.displayName){\r\n\r\n      db.collection('userinfo').doc(user.displayName).onSnapshot((doc) => {\r\n        setUserInfo(doc.data())\r\n      })\r\n    }\r\n  },[user])\r\n\r\n  return (\r\n    <div className=\"temp\">\r\n    {\r\n      userinfo ? (\r\n        <div className=\"User\">\r\n          <div className=\"User__upper\">\r\n            <div className=\"User__upperLeft\">\r\n              <Avatar src={userinfo.photoURL} alt={userinfo.username}/>\r\n            </div>\r\n            <div className=\"User__upperRight\">\r\n              <div className=\"User__upperRightUsername\">\r\n                {userinfo.username}\r\n              </div>\r\n              <div className=\"User__upperRightMeta\">\r\n                <div className=\"postcount\"><strong>{userinfo.posts.length}</strong> posts</div>\r\n                <div className=\"followerscount\" onClick={() => setOpenFollowers(true)}><strong>{userinfo.followers.length}</strong> followers</div>\r\n                <div className=\"followingcount\" onClick={() => setOpenFollowing(true)}><strong>{userinfo.following.length}</strong> following</div>\r\n              </div>\r\n              <div className=\"User__upperRightDescription\">\r\n                {userinfo.description}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"User__posts\">\r\n            <div className=\"User__postsHeading\">\r\n              <div className=\"User__postsHeadinOption active\">Posts</div>\r\n              <div className=\"User__postsHeadinOption\">Videos</div>\r\n              <div className=\"User__postsHeadinOption\">Tagged</div>\r\n            </div>\r\n            <div className=\"User__postsInfo\">\r\n              <img src=\"https://source.unsplash.com/random/200x200?sig=1\" />\r\n              <img src=\"https://source.unsplash.com/random/200x200?sig=2\" />\r\n              <img src=\"https://source.unsplash.com/random/200x200?sig=3\" />\r\n              <img src=\"https://source.unsplash.com/random/200x200?sig=3\" />\r\n              <img src=\"https://source.unsplash.com/random/200x200?sig=3\" />\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <Modal //Followers\r\n            open={openFollowers}\r\n            onClose={() => setOpenFollowers(false)}\r\n          >\r\n          <div style={modalStyle} className={classes.paper}>\r\n          {\r\n            userinfo.followers.map((follower) => (\r\n              follower\r\n            ))\r\n          }\r\n          </div>\r\n          </Modal>\r\n\r\n          <Modal //Followings\r\n            open={openFollowing}\r\n            onClose={() => setOpenFollowing(false)}\r\n          >\r\n          <div style={modalStyle} className={classes.paper}>\r\n          {\r\n            userinfo.following.map((following) => (\r\n              following\r\n            ))\r\n          }\r\n          </div>\r\n          </Modal>\r\n        </div>\r\n      ) : (\r\n        <>Loading.......</>\r\n      )\r\n    }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport {db} from './firebase'\r\nimport firebase from 'firebase'\r\nimport './UserProfile.css'\r\nimport Avatar from '@material-ui/core/avatar'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Button, Input} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom'\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #aa4488',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\nfunction UserProfile({ crntuser }) {\r\n  const [profileInfo,setProfileInfo] = useState(null)\r\n  const [openFollowers,setOpenFollowers] = useState(false)\r\n  const [openFollowing,setOpenFollowing] = useState(false)\r\n  const [sameUser,setSameUser] = useState(false)\r\n  const [isFollowing,setIsFollowing] = useState(false)\r\n  const [isFollowingMsg,setIsFollowingMsg] = useState(\"Follow\")\r\n  const [postsInfo,setPostsinfo] = useState([])\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n  let {profile} = useParams()\r\n\r\n  useEffect(() => {\r\n    if (crntuser && crntuser.displayName && crntuser.displayName === profile){\r\n        setSameUser(true)\r\n    }\r\n    else{\r\n      db.collection('userinfo').doc(profile).onSnapshot((doc) => {\r\n        setPostsinfo([])\r\n        setProfileInfo(doc.data())\r\n      })\r\n    }\r\n\r\n  },[crntuser])\r\n\r\n  useEffect(() => {\r\n    if(crntuser && crntuser.displayName && profileInfo){\r\n      if(profileInfo.followers.indexOf(crntuser.displayName) !== -1){\r\n        setIsFollowing(true)\r\n        setIsFollowingMsg(\"Unfollow\")\r\n      }\r\n      else{\r\n        setIsFollowing(false)\r\n        setIsFollowingMsg(\"Follow\")\r\n      }\r\n    }\r\n  },[profileInfo])\r\n\r\n  useEffect(() => {\r\n    db.collection('userinfo').doc(profile).onSnapshot((doc) => {\r\n      var postIDS = doc.data().posts\r\n      for (var i = 0; i < postIDS.length; i++) {\r\n        db.collection('posts').doc(postIDS[i]).get().then((doc) => {\r\n          let postinfo = doc.data()\r\n          // console.log(postinfo);\r\n          setPostsinfo((currPostsInfo) => [...currPostsInfo,postinfo])\r\n        })\r\n      }\r\n    })\r\n  },[])\r\n\r\n  if(sameUser){\r\n    return <Redirect to=\"/user\" />;\r\n  }\r\n\r\n  function toggleFollow() {\r\n    if(isFollowing){\r\n      db.collection(\"userinfo\").doc(profile).update({\r\n        followers: firebase.firestore.FieldValue.arrayRemove(crntuser.displayName)\r\n      })\r\n      db.collection(\"userinfo\").doc(crntuser.displayName).update({\r\n        following: firebase.firestore.FieldValue.arrayRemove(profile)\r\n      })\r\n    }\r\n    else{\r\n      db.collection(\"userinfo\").doc(profile).update({\r\n        followers: firebase.firestore.FieldValue.arrayUnion(crntuser.displayName)\r\n      })\r\n      db.collection(\"userinfo\").doc(crntuser.displayName).update({\r\n        following: firebase.firestore.FieldValue.arrayUnion(profile)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"UserProfile temp\">\r\n      {\r\n        profileInfo ? (\r\n          <div className=\"User\">\r\n            <div className=\"User__upper\">\r\n              <div className=\"User__upperLeft\">\r\n                <Avatar src={profileInfo.photoURL} alt={profileInfo.username}/>\r\n              </div>\r\n              <div className=\"User__upperRight\">\r\n                <div className=\"User__upperRightUsername\">\r\n                  <div className=\"User__upperRightUsernameU\">{profileInfo.username}</div>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={toggleFollow}>{isFollowingMsg}</Button>\r\n                </div>\r\n                <div className=\"User__upperRightMeta\">\r\n                  <div className=\"postcount\"><strong>{profileInfo.posts.length}</strong> posts</div>\r\n                  <div className=\"followerscount\" onClick={() => setOpenFollowers(true)}><strong>{profileInfo.followers.length}</strong> followers</div>\r\n                  <div className=\"followingcount\" onClick={() => setOpenFollowing(true)}><strong>{profileInfo.following.length}</strong> following</div>\r\n                </div>\r\n                <div className=\"User__upperRightDescription\">\r\n                  {profileInfo.description}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"User__posts\">\r\n              <div className=\"User__postsHeading\">\r\n                <div className=\"User__postsHeadinOption active\">Posts</div>\r\n                <div className=\"User__postsHeadinOption\">Videos</div>\r\n                <div className=\"User__postsHeadinOption\">Tagged</div>\r\n              </div>\r\n              <div className=\"User__postsInfo\">\r\n                {\r\n                  postsInfo.map((postinfo) => (\r\n                    <div className=\"User__postsInfoPost\">\r\n                      <img src={postinfo.imageURL} alt={profile} />\r\n                      <div className=\"post__meta\">\r\n                        <div className=\"post__metaLike\"><div>{postinfo.likes.length}</div><FavoriteBorderIcon /></div>\r\n                        <div className=\"post__metaComments\"><div>{postinfo.comments.length}</div><CommentOutlinedIcon /></div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                }\r\n\r\n\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <Modal //Followers\r\n              open={openFollowers}\r\n              onClose={() => setOpenFollowers(false)}\r\n            >\r\n            <div style={modalStyle} className={classes.paper}>\r\n            {\r\n              profileInfo.followers.map((follower) => (\r\n                <Link to={\"/user/\"+follower} >\r\n                <div className={\"User__follower \" +follower}>\r\n                  <div className=\"User__followerAvatar\">\r\n                    <Avatar src=\"https://google.com\" alt={follower} />\r\n                  </div>\r\n                  <div className=\"User__followerUserInfo\">\r\n                    <div className=\"User__followerUserInfoUsername\">{follower}</div>\r\n                  </div>\r\n                </div>\r\n                </Link>\r\n              ))\r\n            }\r\n            </div>\r\n            </Modal>\r\n\r\n            <Modal //Followings\r\n              open={openFollowing}\r\n              onClose={() => setOpenFollowing(false)}\r\n            >\r\n            <div style={modalStyle} className={classes.paper}>\r\n            {\r\n              profileInfo.following.map((following) => (\r\n                <Link to={\"/user/\"+following}>\r\n                <div className={\"User__follower \" +following}>\r\n\r\n                  <div className=\"User__followerAvatar\">\r\n                    <Avatar src=\"https://google.com\" alt={following} />\r\n                  </div>\r\n                  <div className=\"User__followerUserInfo\">\r\n                    <div className=\"User__followerUserInfoUsername\">{following}</div>\r\n                  </div>\r\n                </div>\r\n                </Link>\r\n              ))\r\n            }\r\n            </div>\r\n            </Modal>\r\n          </div>\r\n        ) :\r\n        (\r\n          <div>\r\n          Loading....\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase'\r\n//import './ImageUpload.css'\r\nimport {Button, Input} from '@material-ui/core';\r\nimport { storage, db } from './firebase'\r\n\r\n\r\nfunction ImageUpload({user}) {\r\n  const [caption,setCaption] = useState('')\r\n  const [image,setImage] = useState(null)\r\n  const [progress,setProgress] = useState(0)\r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.files[0]){\r\n      setImage(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const handleUpload = () =>{\r\n    const uploadTask = storage.ref(`Images/${user.displayName}/${image.name}`).put(image)\r\n    uploadTask.on(\"state_changed\",(snapshot) => {\r\n      const pgrs = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      )\r\n      setProgress(pgrs)\r\n      console.log(snapshot.bytesTransferred / snapshot.totalBytes )\r\n    },(error) => {\r\n      console.log(error);\r\n    },\r\n    () =>{\r\n      storage\r\n        .ref(`Images/${user.displayName}`)\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          db.collection('posts').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            caption: caption,\r\n            imageURL: url,\r\n            username: user.displayName,\r\n            userAvatar: user.photoURL,\r\n            comments: [],\r\n            likes: []\r\n          }).then((postinfo) => {\r\n            console.log(postinfo.id);\r\n            db.collection('userinfo').doc(user.displayName).update({\r\n              posts: firebase.firestore.FieldValue.arrayUnion(postinfo.id)\r\n            })\r\n          })\r\n\r\n          alert(\"Posted...\")\r\n          setProgress(0)\r\n          setCaption(\"\")\r\n          setImage(null)\r\n        })\r\n    }\r\n  )\r\n  }\r\n\r\n  return (\r\n    <div className=\"ImageUpload\">\r\n      <Input type=\"text\" name=\"caption\" onChange={event => setCaption(event.target.value)} value={caption} placeholder=\"Enter your caption\" />\r\n      <progress value={progress} max=\"100\" />\r\n      <Input type=\"file\" name=\"image\" onChange={handleChange} />\r\n      <Button onClick={handleUpload}>\r\n        Upload\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useState, useEffect } from 'react';\r\nimport firebase from 'firebase'\r\nimport date from 'date-and-time'\r\nimport './Post.css'\r\nimport Avatar from '@material-ui/core/avatar'\r\nimport {Button, Input, IconButton} from '@material-ui/core';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { db } from './firebase'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Post({postID, user }) {\r\n  const [postInfo,setPostInfo] = useState(null)\r\n  const [commentText,setCommentText] = useState('')\r\n  const [liked,setLiked] = useState(false)\r\n  const [likeCount,setLikeCount] = useState(0)\r\n  const [likeState,setLikeState] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(liked){\r\n      setLikeState(true)\r\n    }\r\n    else{\r\n      setLikeState(false)\r\n    }\r\n  },[liked])\r\n\r\n  useEffect(() => {\r\n    db.collection('posts').doc(postID).onSnapshot((doc) => {\r\n      setPostInfo(doc.data())\r\n      // console.log(doc.data().timestamp.toDate());\r\n      var data = doc.data().likes\r\n\r\n      setLikeCount(data.length)\r\n      if(user){\r\n      if(data.includes(user.displayName)){\r\n        setLiked(true)\r\n      }else{\r\n        setLiked(false)\r\n      }\r\n    }\r\n    })\r\n  },[])\r\n\r\n  const toggleLike = (e) => {\r\n    e.preventDefault()\r\n    db.collection('posts').doc(postID).get().then((doc) => {\r\n      var data = doc.data().likes\r\n      if(data.includes(user.displayName)){\r\n        //Unliked\r\n        db.collection('posts').doc(postID).update({\r\n          likes: firebase.firestore.FieldValue.arrayRemove(user.displayName)\r\n        })\r\n      }\r\n      else{\r\n        //liked\r\n        db.collection('posts').doc(postID).update({\r\n          likes: firebase.firestore.FieldValue.arrayUnion(user.displayName)\r\n        })\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  const addComment = (e) =>{\r\n    e.preventDefault()\r\n    if(commentText !== ''){\r\n    db.collection('posts').doc(postID).update({\r\n      comments: firebase.firestore.FieldValue.arrayUnion({\r\n        username: user.displayName,\r\n        commenttext: commentText\r\n      })\r\n    })\r\n    }\r\n    else{\r\n      alert(\"Please write something before you send it....\")\r\n    }\r\n    setCommentText('')\r\n  }\r\n  if (!postInfo){\r\n    return (\r\n      <div className=\"post\">\r\n        <div className=\"post__header\">\r\n          <Avatar src=\"https://google.com\" className=\"post__headerAvatar dummy\" />\r\n          <h3 className=\"dummy\">Dummy</h3>\r\n        </div>\r\n        <img className=\"post__image dummy dummyImage\" src=\"https://google.com\" />\r\n        <div className=\"post__likesection dummy\">\r\n        <FavoriteBorderIcon />\r\n\r\n        <div className=\"post__likestotal dummy\">0</div>\r\n        </div>\r\n        <div className=\"post__footer dummy\"><strong>Dummy : </strong>Dummy caption</div>\r\n         <div className=\"post__time dummy\">ddd, MMM DD YYYY HH:mm</div>\r\n\r\n        <div className=\"post__commentbox dummy\">\r\n          Dummy: Dummy comment\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__header\">\r\n        <Avatar src={postInfo.userAvatar} alt={postInfo.username} className=\"post__headerAvatar\" />\r\n        <Link to={\"user/\"+postInfo.username} ><h3>{postInfo.username}</h3></Link>\r\n      </div>\r\n      <div className=\"post__imageSection\">\r\n        <img className=\"post__image\" src={postInfo.imageURL} alt=\"Some beautiful movements\" onDoubleClick={toggleLike} />\r\n        <div className={\r\n          `\r\n          post__imageLikeAnimation\r\n          ${likeState ? \"animate_like\" : \"\"}\r\n          `\r\n        }><svg class=\"heart\" viewBox=\"0 0 32 29.6\">\r\n  <path d=\"M23.6,0c-3.4,0-6.3,2.7-7.6,5.6C14.7,2.7,11.8,0,8.4,0C3.8,0,0,3.8,0,8.4c0,9.4,9.5,11.9,16,21.2\r\n\tc6.1-9.3,16-12.1,16-21.2C32,3.8,28.2,0,23.6,0z\"/>\r\n</svg>\r\n</div>\r\n      </div>\r\n      <div className=\"post__likesection\">\r\n      {user?.displayName && liked ? (\r\n        <IconButton onClick={toggleLike}>\r\n          <FavoriteIcon color=\"secondary\"/>\r\n        </IconButton>\r\n      ) : user?.displayName && !liked ? (\r\n        <IconButton onClick={toggleLike}>\r\n          <FavoriteBorderIcon color=\"secondary\"/>\r\n        </IconButton>      ) : (\r\n        <p></p>\r\n      )\r\n      }\r\n      <div className=\"post__likestotal\">{likeCount}</div>\r\n      </div>\r\n      <div className=\"post__footer\"><strong>{postInfo.username}: </strong>{postInfo.caption}</div>\r\n       <div className=\"post__time\">{date.format(postInfo.timestamp.toDate(),'ddd, MMM DD YYYY HH:mm')}</div>\r\n\r\n      <div className=\"post__commentbox\">\r\n        {\r\n          postInfo.comments.map(comment => (\r\n          <div className=\"post__comment\"><strong>{comment.username}</strong> : {comment.commenttext}</div>\r\n          ))\r\n        }\r\n        { user?.displayName ? (\r\n          <form className=\"post__commentadder\">\r\n          <Input\r\n          type=\"text\"\r\n          placeholder=\"share your thoughs...\"\r\n          value={commentText}\r\n          onChange={(e) => setCommentText(e.target.value)}\r\n          className=\"post__commentadderinput\"\r\n          />\r\n          <IconButton type=\"submit\" onClick={addComment} >\r\n            <SendIcon />\r\n          </IconButton>\r\n          </form>\r\n        ) : (\r\n          <p>Login to comment</p>\r\n        )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\"\r\nimport { db, auth, storage } from './firebase'\r\nimport User from './user'\r\nimport UserProfile from './UserProfile'\r\nimport ImageUpload from './ImageUpload'\r\nimport Post from './Post'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/avatar'\r\nimport {Button, Input, IconButton} from '@material-ui/core';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\n\r\n// TODO: Search for users .... IF successed: Search for posts...\r\n// TODO: Sort the posts as per their time...PROBLEM: Each post is rendered individualy so how to track of that?\r\n// TODO: Do something for uerAvatar at all levels... it can't be added statically to everywhere...\r\n// TODO: Move the LOG OUT button to the \"/user\" Page and make it working properly\r\n// TODO: What about videos and tags in POST? can you do that too?...\r\n// TODO: DELETION of comment after making it....[LAST THING TO DO]\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #aa4488',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\nfunction App() {\r\n  const [user,setUser] = useState(null)\r\n  const [openSignIn,setOpenSignIn] = useState(false)\r\n  const [openSignUp,setOpenSignUp] = useState(false)\r\n  const [openPost,setOpenPost] = useState(false)\r\n  const [username,setUsername] = useState('')\r\n  const [password,setPassword] = useState('')\r\n  const [email,setEmail] = useState('')\r\n  const [searchText,setSearchText] = useState('')\r\n  const [userImage,setUserImage] = useState(null)\r\n  const [avatarURL,setAvatarURL] = useState(null)\r\n  const [postIDS,setPostIDS] = useState([])\r\n  const [searchResults,setSearchResults] = useState([])\r\n\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    useEffect(() => {\r\n      const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n        if(authUser){\r\n          //USer has logged in\r\n          //console.log(authUser)\r\n          setUser(authUser)\r\n          setPostIDS([])\r\n\r\n          if(authUser.photoURL != null){\r\n            setAvatarURL(authUser.photoURL)\r\n          }\r\n\r\n        }\r\n        else{\r\n          //logged out\r\n          setUser(null)\r\n          setPostIDS([])\r\n        }\r\n\r\n      })\r\n\r\n      return () => {\r\n        unsubscribe()\r\n      }\r\n    },[user,username])\r\n\r\n  useEffect(() =>{\r\n    if(user && user.displayName){\r\n      db.collection('userinfo').doc(user.displayName).onSnapshot((doc) => {\r\n        let tempPOSTS = []\r\n        let following = doc.data().following\r\n        for (var i = 0; i < following.length; i++) {\r\n          db.collection('userinfo').doc(following[i]).onSnapshot((uinfo) => {\r\n            let tpost = uinfo.data().posts;\r\n\r\n            // TODO: DELETION IS NOT WORKING......\r\n\r\n            setPostIDS((currPostIDS) => [...new Set([...currPostIDS,...tpost])])\r\n\r\n          })\r\n        }\r\n\r\n      })\r\n\r\n    }\r\n  },[user])\r\n\r\n  // useEffect(() => {\r\n  //   console.log(searchResults);\r\n  // },[searchResults])\r\n\r\n  const handleChange = (e) => {\r\n    if(e.target.files[0]){\r\n      setUserImage(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const signUp = (event) => {\r\n    event.preventDefault()\r\n\r\n    auth.createUserWithEmailAndPassword(email,password)\r\n    .then((authUser) => {\r\n      authUser.user.updateProfile({\r\n        displayName: username\r\n      })\r\n      const uploadTask = storage.ref(`ProfileImages/${username}`).put(userImage)\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          console.log(snapshot.bytesTransferred / snapshot.totalBytes )\r\n        },\r\n        (error) => {alert(error.message)},\r\n        () => {\r\n          storage\r\n            .ref('ProfileImages')\r\n            .child(username)\r\n            .getDownloadURL()\r\n            .then((url => {\r\n              setAvatarURL(url)\r\n              authUser.user.updateProfile({\r\n                photoURL: url\r\n              })\r\n\r\n          db.collection('userinfo').doc(username).set({\r\n            email: email,\r\n            username: username,\r\n            photoURL: url,\r\n            description: \"\",\r\n            followers: [],\r\n            following: [],\r\n            posts: []\r\n          })\r\n          setOpenSignUp(false)\r\n\r\n          alert(\"user created successfully\")\r\n            }))\r\n        }\r\n      )\r\n\r\n    })\r\n    .catch((error) => alert(error.message))\r\n\r\n  }\r\n\r\n  const signIn = (event) => {\r\n    event.preventDefault()\r\n\r\n    auth.signInWithEmailAndPassword(email,password)\r\n    .then((authUser) => {\r\n      setUser(authUser)\r\n      setAvatarURL(authUser.user.photoURL)\r\n      console.log(authUser)\r\n    })\r\n    .catch((error) => alert(error.message))\r\n\r\n    setOpenSignIn(false)\r\n  }\r\n\r\n\r\n  const handleSearch = (event) => {\r\n    // setSearchResults([])\r\n    setSearchText(event.target.value)\r\n    let s = event.target.value;\r\n    db.collection('userinfo').get().then((query) => {\r\n      query.forEach((item, i) => {\r\n        if (item.id.match(s) !== null || s.match(item.id) !== null){\r\n          console.log(item.data().username);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <Router>\r\n      <div className=\"app__header\">\r\n        <div className=\"app__headerLogo\">\r\n          <Link to=\"/\">Phoenixer</Link>\r\n        </div>\r\n        <div className=\"app__headerSearch\">\r\n          <Input\r\n            type=\"text\"\r\n            value={searchText}\r\n            onChange={handleSearch}\r\n            placeholder=\"Search...\"\r\n          />\r\n          <div className=\"app__headerSearchresult\"></div>\r\n        </div>\r\n        <div className=\"app__headerMenu\">\r\n        {user ? (\r\n          <div className=\"app__headerMenuAuth\">\r\n          <IconButton onClick={() => setOpenPost(true)} >\r\n            <CloudUploadIcon />\r\n          </IconButton>\r\n          <Link to=\"/user\">\r\n          <Avatar src={avatarURL} alt={username} />\r\n          </Link>\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={() => {auth.signOut();setUser(null)}} >Log Out</Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"app__headerMenuAuth\">\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpenSignIn(true)} className=\"authButton\" >Sign In</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpenSignUp(true)} className=\"authButton\" >Sign Up</Button>\r\n          </div>\r\n        )\r\n        }\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <Modal //Sgn UP model\r\n        open={openSignUp}\r\n        onClose={() => setOpenSignUp(false)}\r\n      >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <div id=\"simple-modal-description\">\r\n          <center>\r\n          Phoenixer\r\n          </center>\r\n          <form className=\"app_signUp\">\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Input type=\"file\" name=\"image\" onChange={handleChange} />\r\n\r\n            <Button  type=\"submit\" onClick={signUp}>SIgn Up</Button>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n      </Modal>\r\n\r\n      <Modal //Sign in model\r\n        open={openSignIn}\r\n        onClose={() => setOpenSignIn(false)}\r\n      >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <div id=\"simple-modal-description\">\r\n          <center>\r\n          Phoenixer\r\n          </center>\r\n          <form className=\"app_signUp\">\r\n\r\n            <Input\r\n              type=\"email\"\r\n              placeholder=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              type=\"password\"\r\n              placeholder=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button  type=\"submit\" onClick={signIn}>SIgn In</Button>\r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n      </Modal>\r\n      <Modal\r\n        open={openPost}\r\n        onClose={() => setOpenPost(false)}\r\n      >\r\n      <div style={modalStyle} className={classes.paper}>\r\n      <ImageUpload user={user} />\r\n      </div>\r\n      </Modal>\r\n\r\n\r\n\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <div className=\"app__posts\">\r\n            {\r\n              postIDS.map((postID) => (\r\n                <Post key={postID} postID={postID} user={user} />\r\n              ))\r\n            }\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/post\" exact>\r\n            <div>post</div>\r\n          </Route>\r\n          <Route path=\"/user\" exact>\r\n            <User user={user} />\r\n          </Route>\r\n          <Route path=\"/user/:profile\" exact>\r\n            <UserProfile crntuser={user} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}